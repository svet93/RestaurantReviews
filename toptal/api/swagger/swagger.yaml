swagger: "2.0"
info:
  version: "0.0.1"
  title: Restaurant Review App
# during dev, should point to your local machine
host: localhost:3001
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
tags:
  - name: restaurants
  - name: reviews
  - name: users
paths:
  /restaurants:
    get:
      tags:
        - restaurants
      x-swagger-router-controller: restaurant
      description: Returns all restaurants
      # used as the method name of the controller
      operationId: getRestaurants
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetRestaurantListResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      tags:
        - restaurants
      description: Creates restaurant
      parameters:
        - in: body
          name: review
          description: The restaurant to create.
          schema:
            $ref: "#/definitions/RestaurantNew"
      responses:
        "201":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetRestaurantListResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /restaurants/{id}:
    delete:
      tags:
        - restaurants
      summary: Delete a restaurant
      description: Deletes a restaurant by id
      parameters:
        - name: id
          in: path
          description: Restaurant id to delete
          required: true
          type: integer
      responses:
        200:
          description: OK
        '404':
          description: Restaurant not found
  /reviews:
    get:
      tags:
        - reviews
      summary: Gets all reviews for a restaurant
      description: Returns all reviews for a restaurant
      parameters:
        - name: restaurantId
          in: query
          type: integer
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetReviewListResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      tags:
        - reviews
      consumes:
        - application/json
      parameters:
        - in: path
          name: restaurantId
          required: true
          type: integer
        - in: body
          name: review
          description: The user to create.
          schema:
            $ref: "#/definitions/ReviewNew"
      responses:
        "201":
          description: Created
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /reviews/{id}:
    delete:
      tags:
        - reviews
      parameters:
        - in: path
          name: id
          required: true
          type: integer
      responses:
        "200":
          description: Deleted
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /reviews/{id}/comment:
    post:
      tags:
        - reviews
      description: Create comment for review
      parameters:
        - name: id
          description: the id of the review
          in: path
          required: true
          type: integer
        - name: comment
          in: body
          required: true
          schema:
            $ref: "#/definitions/CommentNew"
      responses:
        "201":
          description: Created
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /reviews/comments/{id}:
    delete:
      tags:
        - reviews
      description: Delete comment with id
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        "200":
          description: Deleted Successfully
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users:
    get:
      tags:
        - users
      description: Admin gets all users
      responses:
        200:
          description: Returns users
          schema:
            type: array
            items:
              $ref: "#/definitions/UserGet"
    post:
      tags:
        - users
      description: Creates a user
      parameters:
        - in: body
          name: review
          description: The restaurant to create.
          schema:
            $ref: "#/definitions/UserNew"
      responses:
        "201":
          description: Created
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users/{id}:
    delete:
      tags:
        - users
      description: Delete user with coresponding id
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        "200":
          description: Deleted Successfully
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  RestaurantNew:
    type: object
    properties:
      userId:
        type: integer
        description: userId for owner
      name:
        type: string
      description:
        type: string
      imageUrl:
        type: string
  RestaurantGet:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
  GetRestaurantListResponse:
    required:
      - restaurants
    properties:
      # The array of movies
      restaurants:
        type: array
        items:
          $ref: "#/definitions/RestaurantGet"
  Comment:
    type: object
    properties:
      id:
        type: integer
      body:
        type: string
  CommentNew:
    type: object
    properties:
      body:
        type: string
      userId:
        type: integer
  ReviewNew:
    type: object
    properties:
      userId:
        type: integer
      body:
        type: string
      stars:
        type: integer
        minimum: 0
        maximum: 5
  ReviewGet:
    type: object
    properties:
      id:
        type: number
      body:
        type: string
      stars:
        type: integer
        minimum: 0
        maximum: 5
      created:
        type: string
      comments:
        type: array
        items:
          $ref: '#/definitions/Comment'
  GetReviewListResponse:
    required:
      - reviews
    properties:
      # The array of movies
      reviews:
        type: array
        items: 
          $ref: "#/definitions/ReviewGet"
  UserGet:
    type: object
    properties:
      id:
        type: integer
        format: int64
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
      userType:
        type: string
      active:
        type: boolean
  UserNew:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
      userType:
        type: string
      active:
        type: boolean
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string